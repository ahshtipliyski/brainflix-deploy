{"version":3,"sources":["assets/Logo/Logo-brainflix.svg","assets/Icons/SVG/Icon-upload.svg","assets/Icons/SVG/Icon-play.svg","assets/Icons/SVG/Icon-fullscreen.svg","assets/Icons/SVG/Icon-volume.svg","assets/Icons/SVG/Icon-views.svg","assets/Icons/SVG/Icon-likes.svg","Components/Header/Header.jsx","Components/Hero/Hero.jsx","Components/Comment/Comment.jsx","Components/About/About.jsx","Components/Card/Card.jsx","Components/Aside/Aside.jsx","Components/Main/Main.jsx","Components/UploadPage/UploadPage.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","to","src","logo","alt","type","placeholder","upload","Hero","props","poster","play","duration","fullscreen","volume","Comment","this","name","timestamp","comment","timeStamp","seconds","Math","floor","Date","interval","timeConverter","React","Component","About","mainVideoDetails","title","channel","dynamicTimestamp","viewsIcon","views","likesIcon","likes","description","comments","length","onSubmit","commentHandler","htmlFor","rows","cols","map","commentArray","key","uuidv4","reverse","Card","image","Aside","nextVideos","sideArray","id","url","API_KEY","Main","state","mainVideo","asideVideos","event","dynamicURL","match","params","preventDefault","axios","post","target","value","then","initialMount","catch","error","console","log","reset","get","response","setState","data","videoSample","video","filter","UploadPage","App","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.412cc04b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo-brainflix.1e121e6b.svg\";","module.exports = __webpack_public_path__ + \"static/media/Icon-upload.909b8976.svg\";","module.exports = __webpack_public_path__ + \"static/media/Icon-play.a3c51b76.svg\";","module.exports = __webpack_public_path__ + \"static/media/Icon-fullscreen.03b74b4c.svg\";","module.exports = __webpack_public_path__ + \"static/media/Icon-volume.d17c2fe7.svg\";","module.exports = __webpack_public_path__ + \"static/media/Icon-views.a488fc5b.svg\";","module.exports = __webpack_public_path__ + \"static/media/Icon-likes.23c3f857.svg\";","import React from 'react';\nimport '../../App.scss'\nimport './Header.scss';\nimport logo from '../../assets/Logo/Logo-brainflix.svg';\nimport upload from '../../assets/Icons/SVG/Icon-upload.svg';\nimport {NavLink} from 'react-router-dom';\n\nfunction Header() {\n  return (\n    <nav className=\"nav-bar\">\n      <NavLink to=\"/brainflix-deploy\" className=\"nav-bar__logo-container\"><img src={logo} alt=\"Brainflix logo\" className=\"nav-bar__logo\"/></NavLink>\n      <div className=\"nav-bar__input-container\">\n        <input type=\"text\" className=\"nav-bar__input\" placeholder= \"      Search\"/>\n      </div>\n      <div className=\"nav-bar__account\">\n        <NavLink to=\"/brainflix-deploy/upload\" className=\"nav-bar__upload-button\"><span className=\"nav-bar__plus\"><img src={upload} alt=\"Plus symbol\"/></span> UPLOAD</NavLink>\n        <img src=\"/Images/Mohan-muruge.jpg\" alt=\"User Icon\" className=\"nav-bar__icon\"/> \n      </div>\n    </nav>\n  );\n}\n\nexport default Header;","import React from \"react\";\nimport './Hero.scss';\nimport play from '../../assets/Icons/SVG/Icon-play.svg';\nimport fullscreen from '../../assets/Icons/SVG/Icon-fullscreen.svg';\nimport volume from '../../assets/Icons/SVG/Icon-volume.svg';\n\nfunction Hero(props) {\n\n    return (\n      <section className=\"hero\">\n        <div className=\"hero__background\">\n          <video // controls\n            //src={props.videoSample} \n            type=\"video/mp4\" \n            poster={props.poster}\n            className=\"hero__video\">\n            Sorry, your browser doesn't support embedded videos.\n          </video>\n          <div className=\"hero__controls\">\n            <img src={play} className=\"hero__play\" alt=\"Play Button\"/>\n            <div className=\"hero__video-process\">\n              <div className=\"hero__progress-bar\"></div>\n              <span className=\"hero__progress-time\">0:00 / {props.duration}</span>\n            </div>\n            <div className=\"hero__settings\"><img src={fullscreen} alt=\"Video fullscreen button\"/><img src={volume} alt=\"Volume control button\"/></div>\n          </div>\n        </div>\n      </section>\n    );\n}\n\nexport default Hero;\n","import React from 'react';\nimport '../../App.scss';\nimport './Comment.scss'\n\nconst timeConverter = (timeStamp) => {\n  let seconds = Math.floor((new Date() - timeStamp) / 1000);\n  let interval = Math.floor(seconds / 31536000);\n  if (interval > 1) {\n    return interval + \" years ago\";\n  }\n  interval = Math.floor(seconds / 2592000);\n  if (interval > 1) {\n    return interval + \" months ago\";\n  }\n  interval = Math.floor(seconds / 86400);\n  if (interval > 1) {\n    return interval + \" days ago\";\n  }\n  interval = Math.floor(seconds / 3600);\n  if (interval > 1) {\n    return interval + \" hours ago\";\n  }\n  interval = Math.floor(seconds / 60);\n  if (interval > 1) {\n    return interval + \" minutes ago\";\n  }\n  return Math.floor(seconds) + \" seconds ago\";\n}\n\nclass Comment extends React.Component {\n  render () {\n    let {name, timestamp, comment} = this.props\n    return (\n      <div className=\"comment__each-comment\">               \n        <div className=\"comment__image\"></div> \n        <div className=\"comment__inputs\">\n          <div className=\"comment__top-inputs\">\n            <h3 className=\"comment__name\">{name}</h3>\n            <p className=\"comment__date\">{timeConverter(timestamp)}</p>\n          </div>\n          <p className=\"comment__text\">{comment}</p>\n        </div>\n      </div>  \n    )\n  }\n}\n\nexport default Comment;","import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport Comment from '../Comment/Comment';\nimport './About.scss';\nimport viewsIcon from '../../assets/Icons/SVG/Icon-views.svg';\nimport likesIcon from '../../assets/Icons/SVG/Icon-likes.svg';\n\n\nconst dynamicTimestamp = (timeStamp) => {\n  let seconds = Math.floor((new Date() - timeStamp) / 1000);\n  let interval = Math.floor(seconds / 31536000);\n  if (interval > 1) {\n    return interval + \" years ago\";\n  }\n  interval = Math.floor(seconds / 2592000);\n  if (interval > 1) {\n    return interval + \" months ago\";\n  }\n  interval = Math.floor(seconds / 86400);\n  if (interval > 1) {\n    return interval + \" days ago\";\n  }\n  interval = Math.floor(seconds / 3600);\n  if (interval > 1) {\n    return interval + \" hours ago\";\n  }\n  interval = Math.floor(seconds / 60);\n  if (interval > 1) {\n    return interval + \" minutes ago\";\n  }\n  return Math.floor(seconds) + \" seconds ago\";\n}\n\nfunction About (props) {\n  return (\n    <>\n    <div className=\"about\">\n      <div className=\"about__highlight\">\n        <h1 className=\"about__header\">{props.mainVideoDetails.title}</h1>\n        <div className=\"about__from\">\n          <h3 className=\"about__uploaded-by\">By {props.mainVideoDetails.channel}</h3>\n          <p className=\"about__date\">{dynamicTimestamp(props.mainVideoDetails.timestamp)}</p>\n        </div>\n        <div className=\"about__stats\">\n          <div className=\"about__views-container\">\n            <img className=\"about__icon\" src={viewsIcon} alt=\"Eye Icon - Views\"/>\n            <p className=\"about__views\">{props.mainVideoDetails.views}</p>\n          </div>\n          <div className=\"about__likes-container\">\n            <img className=\"about__icon\" src={likesIcon} alt=\"Heart Icon - Likes\"/>\n            <p className=\"about__likes\">{props.mainVideoDetails.likes}</p>\n          </div>\n        </div>\n      </div>  \n      <div className=\"about__info\">\n        <p className=\"about__text\">{props.mainVideoDetails.description}</p>\n      </div>\n    </div>\n    <div className=\"comment\">\n    <h3 className=\"comment__counter\">{props.mainVideoDetails.comments.length} Comments</h3>\n    <div className=\"comment__form-container\">\n      <form className=\"comment__form\" onSubmit={props.commentHandler}>\n        <img src=\"/Images/Mohan-muruge.jpg\" alt=\"User Icon\" className=\"comment__icon\"/>  \n        <label htmlFor=\"comment\" className=\"comment__input-label\">JOIN THE CONVERSATION</label>\n        <textarea \n          className=\"comment__text-container\" \n          name=\"comment\" \n          rows=\"10\" \n          cols=\"50\" \n          placeholder=\"Write comment here\"></textarea>\n        <button type=\"submit\" className=\"comment__button\">COMMENT</button>\n      </form>\n    </div>\n\n    <div>{\n      props.mainVideoDetails.comments.map((commentArray)=>\n      <Comment key={uuidv4()} name={commentArray.name} timestamp={commentArray.timestamp} comment={commentArray.comment} />\n      ).reverse()\n    }\n    </div>\n  </div>\n    </>\n  );\n  \n}\n\n\nexport default About;","import React from 'react';\nimport './Card.scss';\n\nclass Card extends React.Component { \n  render() {\n    let {title, channel, image} = this.props\n    return (\n      <div className=\"card__container\">\n        <img className=\"card__image\" src={image} alt=\"Side video\" />\n        <div className=\"card__text-container\">\n          <h4 className=\"card__title\">{title}</h4>\n          <p className=\"card__channel\">{channel}</p>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Card;","import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport Card from '../Card/Card';\nimport './Aside.scss';\nimport { Link } from 'react-router-dom';\n\n\nfunction Aside(props) {\n\n  return (\n    <div className=\"card\">\n      <h3 className=\"card__header\">NEXT VIDEO</h3>\n        {\n          props.nextVideos.map((sideArray) =>\n          <Link to={`/brainflix-deploy/${sideArray.id}`} key={uuidv4()} className=\"card__anchor\"> \n            <Card title={sideArray.title} channel={sideArray.channel} image={sideArray.image}/>\n          </Link>\n          )\n        }\n        \n    </div>\n  )\n}\n\n\n\nexport default Aside;","import React from 'react'\nimport './Main.scss';\nimport axios from 'axios';\nimport Hero from '../Hero/Hero';\nimport About from '../About/About';\nimport Aside from '../Aside/Aside';\n\n\nconst url = `https://project-2-api.herokuapp.com`;\nconst API_KEY = '629308dd-9f99-4639-90a7-a06e4fcae511';\nconst MAIN_VIDEO = '1af0jruup5gu';\n\nclass Main extends React.Component {\n  state = {\n    mainVideo: {\n      comments: []\n    },\n    asideVideos: [],\n  }\n\n  //getting information from API for main video and side videos\n  initialMount() {\n    axios\n    .get(`${url}/videos/${MAIN_VIDEO}?api_key=${API_KEY}`)\n    .then(response => {\n      this.setState({\n        mainVideo: response.data,\n      });\n    })\n    .catch(error => {\n      console.log(error)\n    }) \n    axios\n    .get(`${url}/videos/?api_key=${API_KEY}`)\n    .then(response => {\n      this.setState({\n        asideVideos: response.data,\n      });\n    })\n    .catch(error => {\n      console.log(error)\n    })  \n  }\n\n  componentDidMount() {\n    this.initialMount();\n  }\n\n  //dynamic url changing on update\n  componentDidUpdate() {      \n    let dynamicURL = this.props.match.params.id\n    if (typeof this.props.match.params.id === \"undefined\") {\n      dynamicURL = '1af0jruup5gu'}\n    axios\n    .get(`${url}/videos/${dynamicURL}?api_key=${API_KEY}`)\n    .then(response => {\n      if (this.state.mainVideo.id !== response.data.id) {\n        this.setState({\n          mainVideo: response.data,\n        });\n      }   \n    })\n    .catch(error => {\n      console.log(error)\n    })   \n  }\n\n  //post comment\n  commentHandler = (event) => {\n    let dynamicURL = this.props.match.params.id\n    event.preventDefault();\n  \n    if (typeof dynamicURL === \"undefined\") {\n      dynamicURL = '1af0jruup5gu'}\n    axios \n    .post(`${url}/videos/${dynamicURL}/comments?api_key=${API_KEY}`, {\n      \"comment\" : event.target.comment.value,\n      \"name\" : \"Brainstation Man\"\n    })\n    .then(() => {\n      this.initialMount();\n    })\n    .catch(error => {\n      console.log(error)\n    })  \n    event.target.reset();\n  }\n\n  render() {\n    return (\n      <>\n      <Hero \n        poster={this.state.mainVideo.image} \n        videoSample={this.state.mainVideo.video} \n        duration={this.state.mainVideo.duration} />\n      <section className=\"main\"> \n        <div className=\"main__comments\">\n          <About \n            mainVideoDetails={this.state.mainVideo} \n            commentHandler={this.commentHandler} />\n        </div>\n        <Aside \n          nextVideos={this.state.asideVideos.filter(data => data.id !== this.state.mainVideo.id)}/>\n      </section>\n      </>\n    )\n  }\n}\n\nexport default Main;\n","import React from 'react';\nimport './UploadPage.scss';\n\nfunction UploadPage() {\n  return (\n    <div className=\"upload\">\n      <h1 className=\"upload__title\">Upload Video</h1>\n      <form className=\"upload__form\">\n        <div className=\"upload__container\">\n          <div className=\"upload__left-container\">\n            <h2 className=\"upload__sub-header\">VIDEO TUMBNAIL</h2>\n            <img src='/Images/Upload-video-preview.jpg' alt=\"Thumbnail\" className=\"upload__image\" />\n          </div>\n          <div className=\"upload__right-container\">\n            <label htmlFor=\"video-title\"><h2 className=\"upload__sub-header\">TITLE YOUR VIDEO</h2></label>\n            <input type=\"text\" placeholder=\"Add a title to your video\" name=\"video-title\" className=\"upload__input\" />\n            <label htmlFor=\"video-description\"><h2 className=\"upload__sub-header\">ADD A VIDEO DESCRIPTION</h2></label>\n            <textarea name=\"vide-description\" cols=\"30\" rows=\"10\" className=\"upload__description\" placeholder=\"Add a description of your video\"></textarea>\n          </div>\n        </div>\n        <div className=\"upload__buttons-container\">\n          <button className=\"upload__publish-button\">PUBLISH</button>\n          <button className=\"upload__cancel-button\">CANCEL</button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default UploadPage;","import React from 'react';\nimport Header from './Components/Header/Header';\nimport Main from './Components/Main/Main';\nimport UploadPage from './Components/UploadPage/UploadPage';\nimport './App.scss';\nimport { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Header />\n        <Switch>\n          <Route path=\"/brainflix-deploy/\" exact component={Main} />\n          <Route path=\"/brainflix-deploy/upload\" exact component={UploadPage} />\n          <Route path=\"/brainflix-deploy/:id\" exact component={Main} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}